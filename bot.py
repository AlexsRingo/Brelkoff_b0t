
import sqlite3
from telebot import TeleBot, types

bot = TeleBot('8421507526:AAHq5MYaNPOQVYHAYvWbAR9fQkl6ZZRpST8')

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤ –∏ —Å—Å—ã–ª–æ–∫
def init_db():
    conn = sqlite3.connect('brelkof.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS codes
                 (id INTEGER PRIMARY KEY, code TEXT UNIQUE, link TEXT)''')
    conn.commit()
    conn.close()

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å, –æ—Å—Ç–∞–≤–ª—è–µ–º)
def check_subscription(user_id):
    try:
        chat_member = bot.get_chat_member('@brelkof_news', user_id)
        return chat_member.status in ['member', 'administrator', 'creator']
    except:
        return False

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –∏ —Å—Å—ã–ª–∫—É –≤ –±–∞–∑—É
def add_code_word(code, link):
    conn = sqlite3.connect('brelkof.db')
    c = conn.cursor()
    try:
        c.execute("INSERT INTO codes (code, link) VALUES (?, ?)", (code, link))
        conn.commit()
        return True
    except sqlite3.IntegrityError:
        return False  # –µ—Å–ª–∏ –∫–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    finally:
        conn.close()

# –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –ø–æ –∫–æ–¥–æ–≤–æ–º—É —Å–ª–æ–≤—É
def get_link_by_code(code):
    conn = sqlite3.connect('brelkof.db')
    c = conn.cursor()
    c.execute("SELECT link FROM codes WHERE code = ?", (code,))
    result = c.fetchone()
    conn.close()
    return result[0] if result else None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    channel_btn = types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/brelkof_news")
    check_btn = types.InlineKeyboardButton("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")
    markup.add(channel_btn, check_btn)
    
    bot.send_message(message.chat.id, 
                    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç brelkof! üß∂\n\n"
                    "–ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –Ω–∞–±–æ—Ä–∞ –¥–ª—è –≤—è–∑–∞–Ω–∏—è:\n"
                    "1. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª\n"
                    "2. –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –Ω–∞–±–æ—Ä–∞\n"
                    "3. –ü–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",
                    reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
@bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
def check_subscription_callback(call):
    user_id = call.from_user.id
    if check_subscription(user_id):
        bot.send_message(call.message.chat.id, 
                        "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.\n\n"
                        "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –≤–∞—à–µ–≥–æ –Ω–∞–±–æ—Ä–∞:")
    else:
        bot.send_message(call.message.chat.id, 
                        "‚ùå –í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤)
@bot.message_handler(content_types=['text'])
def handle_code_word(message):
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    if not check_subscription(user_id):
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/brelkof_news"))
        bot.send_message(message.chat.id, 
                        "‚ùå –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.",
                        reply_markup=markup)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ
    code = message.text.strip().lower()
    link = get_link_by_code(code)
    
    if link:
        bot.send_message(message.chat.id, 
                        f"üéâ –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:\n{link}\n\n"
                        f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –≤—è–∑–∞–Ω–∏—è! üß∂")
    else:
        bot.send_message(message.chat.id, 
                        "‚ùå –ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n"
                        "–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ —É–∫–∞–∑–∞–Ω–æ –≤ –≤–∞—à–µ–º –Ω–∞–±–æ—Ä–µ –¥–ª—è –≤—è–∑–∞–Ω–∏—è.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –∫–æ–¥–æ–≤—ã–µ —Å–ª–æ–≤–∞
@bot.message_handler(commands=['add_code'])
def add_code_command(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if message.from_user.id != 410300780:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        return
    
    try:
        _, code, link = message.text.split(' ', 2)
        if add_code_word(code.lower(), link):
            bot.send_message(message.chat.id, f"‚úÖ –ö–æ–¥ '{code}' –¥–æ–±–∞–≤–ª–µ–Ω!")
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: —Ç–∞–∫–æ–π –∫–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except ValueError:
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /add_code <–∫–æ–¥–æ–≤–æ–µ_—Å–ª–æ–≤–æ> <—Å—Å—ã–ª–∫–∞>")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
init_db()

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–¥–æ–≤–æ–≥–æ —Å–ª–æ–≤–∞ (–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
add_code_word("–≤—è–∂–µ–º2024", "https://t.me/brelkof_channel/1")

bot.polling()